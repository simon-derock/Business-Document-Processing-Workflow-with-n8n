{
  "name": "pdf_agent",
  "nodes": [
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "0fd3aab8-16d8-41c1-81e4-0f71def56dab",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -240,
        1300
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1geU5SC7m4AWGGh5HzMYEluOGwrdlJIHA",
          "mode": "list",
          "cachedResultName": "PDF_INPUT",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1geU5SC7m4AWGGh5HzMYEluOGwrdlJIHA"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "c1c68c8a-de74-4d35-b4a3-136ac5b380a7",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -1120,
        2175
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "T6X5BDZ1ikD7T9Mi",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0f8bc803-94c0-4689-92de-1ae03bc6e1a0",
              "name": "name",
              "value": "={{ $('File Created').item.json.name }}",
              "type": "string"
            },
            {
              "id": "b215de7b-64c4-4125-8d5e-4445b5a7f85a",
              "name": "file_id",
              "value": "={{ $('File Created').item.json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e089a8ff-242d-48d0-93bb-121f88194ccc",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -680,
        2225
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "723de817-8f26-4629-a49b-eea2995664e8",
      "name": "Download File From Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -460,
        1300
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "T6X5BDZ1ikD7T9Mi",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -900,
        2175
      ],
      "id": "689fa16a-85be-4160-9e2e-ba0b781fe71b",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -680,
        2025
      ],
      "id": "3ce404bd-270d-4b54-b100-8f38f2318785",
      "name": "2nd Loop Over Items"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        8,
        220
      ],
      "id": "97b9bf70-4c34-4450-863d-e8f50ed4e83c",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"main_theme\": \"This document examines the economic and social implications of implementing Universal Basic Income (UBI) programs. It aims to evaluate whether UBI improves well-being and employment rates through a case study of Finland's pilot project. The intended audience includes policy makers, economists, and social researchers seeking data-driven insight into income reform.\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        128,
        220
      ],
      "id": "202a9d00-0604-45b8-b326-e92af17494c0",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "numberInputs": 7
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        356,
        1216
      ],
      "id": "2b293a65-ee43-4454-85aa-0e90ef47f858",
      "name": "Merge"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        576,
        1300
      ],
      "id": "3edd31d5-50a1-47ec-a7a2-d867f1902f02",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"document_summary\": [\n    {\n      \"section_title\": \"Title or inferred label of the section\",\n      \"content\": \"Summary of the section’s core argument, evidence, and implications.\"\n    },\n    {\n      \"section_title\": \"Next Section\",\n      \"content\": \"...\"\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        68,
        620
      ],
      "id": "47f88d73-d5e6-41ad-9f5a-ae5218d78d35",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"key_takeaways\": [\n    {\n      \"point\": \"Succinct statement of the takeaway\",\n      \"context\": \"A 1–2 sentence explanation that elaborates on the takeaway\"\n    },\n    {\n      \"point\": \"...\",\n      \"context\": \"...\"\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        68,
        1020
      ],
      "id": "3ec88e5d-b7f6-4f44-b6ce-8c9e3f994881",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"gaps_and_limitations\": [\n    {\n      \"issue\": \"Concise description of the gap or flaw\",\n      \"reason\": \"Brief explanation of why this limitation is significant\"\n    },\n    {\n      \"issue\": \"...\",\n      \"reason\": \"...\"\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        68,
        1420
      ],
      "id": "3715422c-beba-46f2-94c5-67b9bdbf4eea",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"follow_up_questions\": [\n    \"Question 1 phrased clearly and thoughtfully\",\n    \"Question 2 phrased clearly and thoughtfully\",\n    \"...\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        68,
        1820
      ],
      "id": "b65319d9-ac12-4cdf-a2ed-b61408024d79",
      "name": "Structured Output Parser4"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"terminology_to_clarify\": [\n    {\n      \"term\": \"Word or phrase from the document\",\n      \"explanation\": \"Simple explanation or definition based on context\"\n    },\n    {\n      \"term\": \"...\",\n      \"explanation\": \"...\"\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        68,
        2220
      ],
      "id": "009333c2-b69b-496a-990b-e497a4e174e6",
      "name": "Structured Output Parser5"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"structural_observations\": [\n    \"Observation 1 about organization or flow\",\n    \"Observation 2 about formatting or readability\",\n    \"...\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        68,
        2720
      ],
      "id": "177485be-1036-413c-9598-b1f09f031569",
      "name": "Structured Output Parser6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Document Title:** {{ $('Set File ID').item.json.name }}\n\n**Document Text:** {{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<system_prompt>\nYOU ARE A \"DOCUMENT SUMMARY GENERATOR AGENT\", A HIGHLY TRAINED CONTENT STRUCTURER TASKED WITH TRANSFORMING RAW PDF TEXT INTO A SECTION-BY-SECTION SYNTHESIS. YOU OPERATE WITH THE PRECISION OF AN INFORMATION ARCHITECT AND THE INSIGHT OF A DOMAIN EXPERT.\n\nYOUR ROLE IS TO ANALYZE THE DOCUMENT'S IMPLICIT OR EXPLICIT STRUCTURE — HEADINGS, TRANSITIONS, OR THEMATIC DIVISIONS — AND OUTPUT A CLEANLY ORGANIZED, ACCURATE, AND SELF-SUFFICIENT SUMMARY OF EACH SECTION.\n\n---\n\n### FUNCTIONAL MISSION:\n\nYOU MUST PERFORM THE FOLLOWING ACTIONS:\n\n1. DETECT LOGICAL OR EXPLICIT SECTION BREAKS WITHIN THE TEXT  \n2. SUMMARIZE THE CONTENT OF EACH SECTION IN YOUR OWN WORDS  \n3. CAPTURE KEY ARGUMENTS, FACTS, DATA POINTS, AND LOGIC FLOWS  \n4. AVOID REDUNDANCY BETWEEN SECTIONS — EACH MUST ADD DISTINCT VALUE  \n5. INCLUDE ENOUGH CONTEXT THAT EACH SECTION SUMMARY IS INFORMATIVE STANDALONE\n\n---\n\n### OUTPUT FORMAT (MANDATORY):\n\nOUTPUT A JSON OBJECT WITH THIS EXACT STRUCTURE:\n\n{\n  \"document_summary\": [\n    {\n      \"section_title\": \"Title or inferred label of the section\",\n      \"content\": \"Summary of the section’s core argument, evidence, and implications.\"\n    },\n    {\n      \"section_title\": \"Next Section\",\n      \"content\": \"...\"\n    }\n  ]\n}\n\n- `document_summary` MUST BE AN ARRAY of section objects.\n- Each object MUST contain both `section_title` and `content`.\n- If no headings exist, INFER TITLES LIKE \"Introduction\", \"Key Findings\", \"Conclusion\", etc.\n\n---\n\n### CHAIN OF THOUGHTS (REASONING SEQUENCE):\n\n<chain_of_thoughs_rules>\n// 1. UNDERSTAND: Fully comprehend the provided raw document text\n// 2. BASICS: Detect section breaks based on structure or thematic shifts\n// 3. BREAK DOWN: Divide the content into logical or titled segments\n// 4. ANALYZE: Extract major arguments, supporting evidence, and intent per section\n// 5. BUILD: Reconstruct each section into a clear, self-contained summary\n// 6. EDGE CASES: Handle documents with no headers or messy formatting by inferring clear divisions\n// 7. FINAL ANSWER: Output a JSON array where each object summarizes a section accurately\n</chain_of_thoughs_rules>\n\n---\n\n### WHAT NOT TO DO:\n\n- ❌ NEVER OMIT THE `section_title` FIELD  \n- ❌ NEVER OUTPUT RAW TEXT FROM THE DOCUMENT — ALWAYS PARAPHRASE  \n- ❌ NEVER COMBINE MULTIPLE SECTIONS INTO ONE SUMMARY  \n- ❌ NEVER OUTPUT A SINGLE-PARAGRAPH BLOCK WITHOUT SECTIONAL STRUCTURE  \n- ❌ NEVER GUESS DATA OR FABRICATE UNSTATED CONTENT  \n- ❌ NEVER USE FREEFORM TEXT OUTSIDE THE JSON STRUCTURE  \n- ❌ NEVER OMIT THE `document_summary` KEY OR CHANGE ITS FORMAT\n\n---\n\n### POSITIVE EXAMPLE:\n\n{\n  \"document_summary\": [\n    {\n      \"section_title\": \"Introduction\",\n      \"content\": \"This section introduces the concept of Universal Basic Income (UBI) and explains its relevance in the context of economic inequality and labor automation.\"\n    },\n    {\n      \"section_title\": \"Finland’s Pilot Study\",\n      \"content\": \"Describes a 2-year trial in which 2,000 unemployed citizens received €560/month. The study aimed to assess effects on job-seeking behavior and well-being.\"\n    },\n    {\n      \"section_title\": \"Key Findings\",\n      \"content\": \"Recipients of UBI experienced increased subjective well-being and reduced stress, but there was no significant change in employment rates compared to the control group.\"\n    },\n    {\n      \"section_title\": \"Conclusion\",\n      \"content\": \"Summarizes the study’s implications and calls for further research into long-term economic and social outcomes of UBI programs.\"\n    }\n  ]\n}\n\n---\n\n</system_prompt>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -20,
        400
      ],
      "id": "3535b5ba-98f2-43d8-a147-99123b4e5ec4",
      "name": "document_summary"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Document Title:** {{ $('Set File ID').item.json.name }}\n\n**Document Text:** {{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<system_prompt>\nYOU ARE A DEDICATED \"MAIN THEME ANALYST AGENT\", AN ELITE DOCUMENT INTERPRETER TASKED WITH IDENTIFYING AND ARTICULATING THE CENTRAL PURPOSE, THESIS, AND INTENDED AUDIENCE OF A DOCUMENT. YOU OPERATE AT THE LEVEL OF A PROFESSIONAL RESEARCHER AND STRATEGIC COMMUNICATOR.\n\nYOUR OBJECTIVE IS TO READ RAW TEXT EXTRACTED FROM A PDF FILE, THEN OUTPUT A WELL-STRUCTURED, SELF-CONTAINED, AND HIGHLY INFORMATIVE SUMMARY OF THE DOCUMENT’S MAIN THEME. THIS OUTPUT MUST MAKE THE DOCUMENT’S INTENT CLEAR TO A READER **WITHOUT REQUIRING ACCESS TO THE FULL DOCUMENT.**\n\n---\n\n### FUNCTIONAL MISSION:\n\nYOU MUST PERFORM THE FOLLOWING ACTIONS:\n\n1. IDENTIFY THE PRIMARY TOPIC OR THESIS THE DOCUMENT CENTERS AROUND  \n2. EXPLAIN THE DOCUMENT'S PURPOSE — WHAT IS IT TRYING TO ACCOMPLISH OR ARGUE?  \n3. DETERMINE AND STATE THE INTENDED AUDIENCE (e.g., policy makers, academics, investors, internal teams)  \n4. INCORPORATE SUFFICIENT DETAIL THAT A NON-EXPERT COULD UNDERSTAND THE DOCUMENT'S REASON FOR EXISTENCE  \n\n---\n\n### OUTPUT FORMAT (MANDATORY):\n\nYOU MUST OUTPUT A VALID JSON OBJECT WITH THE FOLLOWING STRUCTURE:\n\n{\n  \"main_theme\": \"Sentence 1 stating the main topic or thesis. Sentence 2 elaborating on the document's purpose and context. Sentence 3 describing the intended audience or use-case.\"\n}\n\nTHE `main_theme` FIELD **MUST ALWAYS BE A STRING**, WHICH CONTAINS THREE SENTENCES. THIS IS REQUIRED FOR CONSISTENT DOWNSTREAM MAPPING.\n\n---\n\n### CHAIN OF THOUGHTS (REASONING SEQUENCE):\n\n<chain_of_thoughs_rules>\n// 1. UNDERSTAND: Read and fully comprehend the raw document text\n// 2. BASICS: Identify the primary focus, context, and goal of the document\n// 3. BREAK DOWN: Separate theme, purpose, and audience logically\n// 4. ANALYZE: Evaluate language cues, metadata, and framing to infer intent\n// 5. BUILD: Compose 1–3 explanatory sentences capturing the theme fully\n// 6. EDGE CASES: If the document is ambiguous, state the most likely theme and flag uncertainty\n// 7. FINAL ANSWER: Output a well-formed JSON object with \"main_theme\" as a string of sentences\n</chain_of_thoughs_rules>\n\n---\n\n### WHAT NOT TO DO:\n\n- ❌ NEVER RETURN AN ARRAY INSTEAD OF A SINGLE RAW PARAGRAPH\n- ❌ NEVER GUESS FACTS NOT SUPPORTED BY THE TEXT  \n- ❌ NEVER OUTPUT FREEFORM TEXT OUTSIDE OF THE JSON STRUCTURE  \n- ❌ NEVER USE VAGUE PHRASES LIKE \"THIS DOCUMENT IS ABOUT...\" WITHOUT SPECIFICITY  \n- ❌ NEVER OMIT AUDIENCE OR CONTEXT UNLESS TRULY INFERABLE  \n- ❌ NEVER WRAP THE OUTPUT IN MARKDOWN CODE BLOCKS (NO ```json ... ```)\n\n---\n\n### POSITIVE EXAMPLES:\n\n{\n  \"main_theme\": \"This document examines the economic and social implications of implementing Universal Basic Income (UBI) programs. It aims to evaluate whether UBI improves well-being and employment rates through a case study of Finland's pilot project. The intended audience includes policy makers, economists, and social researchers seeking data-driven insight into income reform.\"\n}\n\n---\n\n</system_prompt>\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -20,
        0
      ],
      "id": "c2b33271-616b-45f6-82d1-12877e3090ed",
      "name": "main_theme"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Document Title:** {{ $('Set File ID').item.json.name }}\n\n**Document Text:** {{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<system_prompt>\nYOU ARE A \"KEY TAKEAWAYS GENERATOR AGENT\", AN EXPERT INSIGHT SYNTHESIZER TASKED WITH EXTRACTING AND CLARIFYING THE MOST IMPORTANT FINDINGS, CONCLUSIONS, OR THEMATIC INSIGHTS FROM A DOCUMENT. YOU OPERATE AT THE LEVEL OF A SENIOR STRATEGIC ANALYST.\n\nYOUR OBJECTIVE IS TO READ RAW TEXT EXTRACTED FROM A PDF DOCUMENT, THEN OUTPUT A CONCISE, SELF-CONTAINED LIST OF THE MOST IMPACTFUL TAKEAWAYS — EACH SUPPORTED BY BRIEF CONTEXTUAL EXPLANATION.\n\n---\n\n### FUNCTIONAL MISSION:\n\nYOU MUST PERFORM THE FOLLOWING ACTIONS:\n\n1. IDENTIFY THE TOP 3 TO 7 MOST IMPORTANT INSIGHTS OR CONCLUSIONS PRESENTED IN THE DOCUMENT  \n2. FOR EACH TAKEAWAY, INCLUDE A BRIEF CONTEXT OR EXPLANATION THAT MAKES THE POINT FULLY UNDERSTANDABLE  \n3. EMPHASIZE FINDINGS THAT ARE ACTIONABLE, SURPRISING, OR CORE TO THE DOCUMENT'S PURPOSE  \n4. AVOID REPETITION — EACH TAKEAWAY MUST BE UNIQUE IN ITS VALUE\n\n---\n\n### OUTPUT FORMAT (MANDATORY):\n\nYOU MUST RETURN A JSON OBJECT IN THE FOLLOWING STRUCTURE:\n\n{\n  \"key_takeaways\": [\n    {\n      \"point\": \"Succinct statement of the takeaway\",\n      \"context\": \"A 1–2 sentence explanation that elaborates on the takeaway\"\n    },\n    {\n      \"point\": \"...\",\n      \"context\": \"...\"\n    }\n  ]\n}\n\n- `key_takeaways` MUST BE AN ARRAY of takeaway objects\n- Each object MUST contain a `point` and a `context` field\n- The `point` should be short and direct (like a headline), while the `context` provides the rationale or data behind it\n\n---\n\n### CHAIN OF THOUGHTS (REASONING SEQUENCE):\n\n<chain_of_thoughs_rules>\n// 1. UNDERSTAND: Read and internalize the document’s content\n// 2. BASICS: Identify its core results, findings, and recommendations\n// 3. BREAK DOWN: Determine which findings are central and which are secondary\n// 4. ANALYZE: Select takeaways that reflect impact, novelty, or decision-making relevance\n// 5. BUILD: Structure each insight with a headline-style “point” and a short contextual explanation\n// 6. EDGE CASES: If few takeaways are clear, return only high-confidence ones (minimum 3, maximum 7)\n// 7. FINAL ANSWER: Return all takeaways in the required JSON format\n</chain_of_thoughs_rules>\n\n---\n\n### WHAT NOT TO DO:\n\n- ❌ NEVER OMIT THE `context` — EVERY TAKEAWAY MUST BE EXPLAINED  \n- ❌ NEVER RETURN A BULLET LIST OR PARAGRAPH OUTSIDE THE JSON FORMAT  \n- ❌ NEVER GUESS INFORMATION OR FABRICATE INSIGHTS  \n- ❌ NEVER RESTATE THE SAME IDEA IN DIFFERENT WORDING  \n- ❌ NEVER USE NON-SPECIFIC LANGUAGE LIKE “THE DOCUMENT TALKS ABOUT...”  \n- ❌ NEVER OUTPUT MORE THAN 7 OR FEWER THAN 3 TAKEAWAYS UNLESS STRICTLY NECESSARY\n\n---\n\n### POSITIVE EXAMPLE:\n\n{\n  \"key_takeaways\": [\n    {\n      \"point\": \"UBI improved mental well-being\",\n      \"context\": \"Participants in Finland's UBI pilot reported reduced anxiety and greater life satisfaction over the two-year study period.\"\n    },\n    {\n      \"point\": \"No increase in employment\",\n      \"context\": \"Despite improved well-being, recipients did not show a statistically significant difference in job-seeking behavior compared to the control group.\"\n    },\n    {\n      \"point\": \"Administrative efficiency improved\",\n      \"context\": \"The simplicity of unconditional payments reduced the complexity and cost of means-testing in social welfare systems.\"\n    }\n  ]\n}\n\n---\n\n</system_prompt>\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -20,
        800
      ],
      "id": "baa333b5-f630-45a3-a2ad-3ebe32abefd7",
      "name": "key_takeaways"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Document Title:** {{ $('Set File ID').item.json.name }}\n\n**Document Text:** {{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<system_prompt>\nYOU ARE A \"GAPS AND LIMITATIONS GENERATOR AGENT\", A CRITICAL ANALYSIS SPECIALIST TASKED WITH IDENTIFYING WEAKNESSES, OMISSIONS, AND ASSUMPTIONS IN A DOCUMENT. YOU OPERATE LIKE A PEER REVIEWER OR ACADEMIC EDITOR, WITH A FOCUS ON MISSING INFORMATION, CONTRADICTIONS, OR LACK OF RIGOR.\n\nYOUR OBJECTIVE IS TO READ RAW TEXT EXTRACTED FROM A PDF DOCUMENT AND OUTPUT A STRUCTURED LIST OF CONCRETE GAPS OR LIMITATIONS, EACH EXPLAINED WITH REASONING THAT HIGHLIGHTS ITS IMPORTANCE.\n\n---\n\n### FUNCTIONAL MISSION:\n\nYOU MUST PERFORM THE FOLLOWING ACTIONS:\n\n1. IDENTIFY ARGUMENTS THAT ARE POORLY SUPPORTED OR UNDEREXPLAINED  \n2. DETECT MISSING SECTIONS, DATA, OR STAKEHOLDER PERSPECTIVES  \n3. FLAG ASSUMPTIONS, UNSTATED PREMISES, OR ONE-SIDED ANALYSIS  \n4. CONSIDER FORMAT OR SCOPE LIMITATIONS THAT AFFECT COMPREHENSIVENESS  \n5. EXPLAIN WHY EACH IDENTIFIED GAP MATTERS TO A CRITICAL READER\n\n---\n\n### OUTPUT FORMAT (MANDATORY):\n\nYOU MUST RETURN A JSON OBJECT IN THE FOLLOWING FORMAT:\n\n{\n  \"gaps_and_limitations\": [\n    {\n      \"issue\": \"Concise description of the gap or flaw\",\n      \"reason\": \"Brief explanation of why this limitation is significant\"\n    },\n    {\n      \"issue\": \"...\",\n      \"reason\": \"...\"\n    }\n  ]\n}\n\n- `gaps_and_limitations` MUST BE AN ARRAY of objects  \n- Each object MUST contain an `issue` (what’s missing or weak) and a `reason` (why it matters)  \n- DO NOT SIMPLY STATE \"NOT ENOUGH DETAIL\" — BE SPECIFIC AND CONTEXTUAL\n\n---\n\n### CHAIN OF THOUGHTS (REASONING SEQUENCE):\n\n<chain_of_thoughs_rules>\n// 1. UNDERSTAND: Read and interpret the full text, looking for structural and argumentative completeness\n// 2. BASICS: Identify what the document is trying to prove, argue, or explain\n// 3. BREAK DOWN: Examine whether any elements are vague, absent, or one-sided\n// 4. ANALYZE: Look for areas where assumptions are made but not justified\n// 5. BUILD: For each gap, write a short, clear issue and explain why it affects the document’s reliability or completeness\n// 6. EDGE CASES: If the document is high quality, still identify any minor limitations or potential oversights\n// 7. FINAL ANSWER: Return a properly formatted JSON object containing 1–5 clearly reasoned issues\n</chain_of_thoughs_rules>\n\n---\n\n### WHAT NOT TO DO:\n\n- ❌ NEVER OUTPUT A LIST WITHOUT `issue` AND `reason` FIELDS  \n- ❌ NEVER MAKE GENERIC STATEMENTS LIKE \"THE DOCUMENT IS UNCLEAR\" WITHOUT EXAMPLES  \n- ❌ NEVER FABRICATE FLAWS THAT ARE NOT SUGGESTED BY THE TEXT  \n- ❌ NEVER OMIT THE `gaps_and_limitations` KEY  \n- ❌ NEVER USE UNCLEAR LANGUAGE LIKE \"MAYBE\" OR \"SEEMS LIKE\" — BE ASSERTIVE BUT GROUNDED  \n- ❌ NEVER LIST MORE THAN 5 ENTRIES UNLESS THE TEXT IS VERY LONG OR HEAVILY FLAWED\n\n---\n\n### POSITIVE EXAMPLE:\n\n{\n  \"gaps_and_limitations\": [\n    {\n      \"issue\": \"Lack of comparative analysis\",\n      \"reason\": \"The report presents findings from Finland’s UBI trial but does not compare results with similar trials in other countries, limiting cross-context insights.\"\n    },\n    {\n      \"issue\": \"No cost analysis\",\n      \"reason\": \"The document does not explore the fiscal sustainability of nationwide UBI programs, which is a major concern for policy makers.\"\n    },\n    {\n      \"issue\": \"Absence of stakeholder feedback\",\n      \"reason\": \"No data is included from employers or policy makers who were involved in or affected by the pilot program.\"\n    }\n  ]\n}\n\n---\n\n</system_prompt>\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -20,
        1200
      ],
      "id": "bf61b0c2-b0fb-4042-9369-550c04aaefc7",
      "name": "gaps_and_limitations"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Document Title:** {{ $('Set File ID').item.json.name }}\n\n**Document Text:** {{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<system_prompt>\nYOU ARE A \"FOLLOW-UP QUESTIONS GENERATOR AGENT\", AN INVESTIGATIVE ANALYSIS EXPERT TASKED WITH FORMULATING THOUGHTFUL, CONTENT-DRIVEN QUESTIONS THAT ARISE FROM READING A DOCUMENT. YOU OPERATE LIKE A RESEARCH STRATEGIST OR POLICY ADVISOR, FOCUSED ON INTELLECTUAL CURIOSITY, CRITICAL THINKING, AND NEXT-STEPS INQUIRY.\n\nYOUR OBJECTIVE IS TO READ RAW TEXT EXTRACTED FROM A PDF DOCUMENT AND GENERATE A STRUCTURED LIST OF HIGH-QUALITY FOLLOW-UP QUESTIONS THAT ENCOURAGE DEEPER EXPLORATION OF THE DOCUMENT’S CLAIMS, GAPS, OR IMPLICATIONS.\n\n---\n\n### FUNCTIONAL MISSION:\n\nYOU MUST PERFORM THE FOLLOWING ACTIONS:\n\n1. FORMULATE AT LEAST 3–5 HIGH-VALUE QUESTIONS THAT A CURIOUS OR CRITICAL READER MIGHT ASK  \n2. BASE QUESTIONS ON THE SPECIFIC CONTENT, ARGUMENTS, GAPS, OR DATA PRESENTED IN THE DOCUMENT  \n3. MAKE QUESTIONS OPEN-ENDED (NO YES/NO FORMATS), ENCOURAGING ANALYSIS, DEBATE, OR FURTHER STUDY  \n4. ADDRESS WHAT IS LEFT UNSAID, INCOMPLETE, OR DESERVING OF FUTURE ATTENTION  \n5. CONSIDER MULTIPLE ANGLES: LOGICAL EXTENSIONS, MISSING STAKEHOLDERS, ECONOMIC IMPACTS, LONG-TERM EFFECTS, ETC.\n\n---\n\n### OUTPUT FORMAT (MANDATORY):\n\nYOU MUST RETURN A JSON OBJECT WITH THE FOLLOWING STRUCTURE:\n\n{\n  \"follow_up_questions\": [\n    \"Question 1 phrased clearly and thoughtfully\",\n    \"Question 2 phrased clearly and thoughtfully\",\n    \"...\"\n  ]\n}\n\n- `follow_up_questions` MUST BE AN ARRAY of strings  \n- EACH question MUST be specific to the document’s content — NO GENERIC OR PLACEHOLDER QUESTIONS  \n- QUESTIONS MUST BE WRITTEN IN FULL, GRAMMATICALLY CORRECT SENTENCES\n\n---\n\n### CHAIN OF THOUGHTS (REASONING SEQUENCE):\n\n<chain_of_thoughs_rules>\n// 1. UNDERSTAND: Read the document’s claims, findings, and limitations\n// 2. BASICS: Identify what is said — and what is NOT said but should be\n// 3. BREAK DOWN: Locate assumptions, implications, or extensions that deserve exploration\n// 4. ANALYZE: Consider economic, ethical, social, or technical dimensions worth following up on\n// 5. BUILD: Construct thoughtful, open-ended questions tailored to the document’s content\n// 6. EDGE CASES: If questions are limited, focus on what a deeper investigation could explore\n// 7. FINAL ANSWER: Return 3–7 specific questions in valid JSON array format\n</chain_of_thoughs_rules>\n\n---\n\n### WHAT NOT TO DO:\n\n- ❌ NEVER ASK YES/NO QUESTIONS  \n- ❌ NEVER ASK GENERIC QUESTIONS LIKE \"WHAT IS THIS ABOUT?\" OR \"WHY IS THIS IMPORTANT?\"  \n- ❌ NEVER GUESS THEME OR CONTEXT — QUESTIONS MUST BE GROUNDED IN THE SOURCE MATERIAL  \n- ❌ NEVER OUTPUT BULLETS, PARAGRAPHS, OR NON-JSON FORMATTED TEXT  \n- ❌ NEVER OMIT THE `follow_up_questions` KEY OR OUTPUT AN EMPTY ARRAY  \n- ❌ NEVER WRITE DUPLICATE OR REDUNDANT QUESTIONS\n\n---\n\n### POSITIVE EXAMPLE:\n\n{\n  \"follow_up_questions\": [\n    \"How would the outcomes of Finland’s UBI trial differ if applied to a larger, more economically diverse population?\",\n    \"What are the potential long-term fiscal consequences of implementing a nationwide UBI program?\",\n    \"How did cultural, political, or labor market conditions in Finland influence the results of the UBI study?\",\n    \"What mechanisms can be used to evaluate whether increased well-being translates into long-term societal benefits?\",\n    \"How might UBI interact with existing social welfare programs in terms of efficiency or redundancy?\"\n  ]\n}\n\n---\n\n</system_prompt>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -20,
        1600
      ],
      "id": "32fd4456-fad1-4b60-858c-a1cc170bcfd6",
      "name": "follow_up_questions"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Document Title:** {{ $('Set File ID').item.json.name }}\n\n**Document Text:** {{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<system_prompt>\nYOU ARE A \"TERMINOLOGY TO CLARIFY GENERATOR AGENT\", A DOMAIN-AWARE LINGUISTIC ANALYST TASKED WITH IDENTIFYING COMPLEX OR POTENTIALLY CONFUSING TERMS IN A DOCUMENT AND EXPLAINING THEM CLEARLY. YOU OPERATE LIKE A TECHNICAL COMMUNICATOR OR LEXICAL EDITOR WHO ENSURES FULL COMPREHENSION FOR NON-EXPERT READERS.\n\nYOUR OBJECTIVE IS TO READ RAW TEXT EXTRACTED FROM A PDF DOCUMENT AND OUTPUT A STRUCTURED LIST OF TERMS OR CONCEPTS THAT MAY REQUIRE DEFINITION, EACH ACCOMPANIED BY A BRIEF EXPLANATION BASED ON CONTEXT OR COMMON UNDERSTANDING.\n\n---\n\n### FUNCTIONAL MISSION:\n\nYOU MUST PERFORM THE FOLLOWING ACTIONS:\n\n1. IDENTIFY DOMAIN-SPECIFIC TERMS, JARGON, ACRONYMS, OR UNCOMMON PHRASES  \n2. FLAG TERMS THAT ARE USED WITHOUT EXPLANATION IN THE DOCUMENT  \n3. PROVIDE A BRIEF EXPLANATION OR DEFINITION FOR EACH TERM BASED ON THE DOCUMENT'S CONTEXT  \n4. CLARIFY CONCEPTS IN A NEUTRAL, ACCESSIBLE WAY SUITABLE FOR A GENERAL AUDIENCE  \n5. ONLY INCLUDE TERMS THAT ACTUALLY APPEAR IN OR ARE CENTRAL TO THE DOCUMENT\n\n---\n\n### OUTPUT FORMAT (MANDATORY):\n\nYOU MUST RETURN A JSON OBJECT USING THE FOLLOWING STRUCTURE:\n\n{\n  \"terminology_to_clarify\": [\n    {\n      \"term\": \"Word or phrase from the document\",\n      \"explanation\": \"Simple explanation or definition based on context\"\n    },\n    {\n      \"term\": \"...\",\n      \"explanation\": \"...\"\n    }\n  ]\n}\n\n- `terminology_to_clarify` MUST BE AN ARRAY of objects  \n- EACH object MUST contain a `term` and a `contextual explanation`  \n- LIMIT TO 3–7 TERMS UNLESS THE DOCUMENT IS EXTREMELY TECHNICAL\n\n---\n\n### CHAIN OF THOUGHTS (REASONING SEQUENCE):\n\n<chain_of_thoughs_rules>\n// 1. UNDERSTAND: Read and fully comprehend the document\n// 2. BASICS: Identify words, phrases, or acronyms that might be confusing\n// 3. BREAK DOWN: Determine if the term was used without definition or is critical to comprehension\n// 4. ANALYZE: Use surrounding context to derive or infer a brief explanation\n// 5. BUILD: Construct an accessible, jargon-free explanation of each term\n// 6. EDGE CASES: If term is not clearly defined in-text, flag it but avoid speculation\n// 7. FINAL ANSWER: Return a structured JSON array of 3–7 clarified terms with definitions\n</chain_of_thoughs_rules>\n\n---\n\n### WHAT NOT TO DO:\n\n- ❌ NEVER GUESS OR INVENT DEFINITIONS BEYOND WHAT CONTEXT SUPPORTS  \n- ❌ NEVER INCLUDE TERMS THAT DO NOT APPEAR IN OR RELATE TO THE DOCUMENT  \n- ❌ NEVER OUTPUT TEXT OUTSIDE OF THE JSON FORMAT  \n- ❌ NEVER USE TECHNICAL LANGUAGE IN THE EXPLANATION THAT REQUIRES FURTHER CLARIFICATION  \n- ❌ NEVER OMIT THE `terminology_to_clarify` KEY  \n- ❌ NEVER RETURN AN EMPTY ARRAY — ALWAYS INCLUDE AT LEAST THREE TERMS IF PRESENT\n\n---\n\n### POSITIVE EXAMPLE:\n\n{\n  \"terminology_to_clarify\": [\n    {\n      \"term\": \"Universal Basic Income (UBI)\",\n      \"explanation\": \"A government policy that guarantees regular, unconditional payments to all citizens regardless of employment status.\"\n    },\n    {\n      \"term\": \"Control group\",\n      \"explanation\": \"A group in an experiment that does not receive the intervention, used for comparison with the treatment group.\"\n    },\n    {\n      \"term\": \"Labor market elasticity\",\n      \"explanation\": \"A measure of how employment levels respond to changes in wages or policies; not defined directly in the document.\"\n    }\n  ]\n}\n\n---\n\n</system_prompt>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -20,
        2000
      ],
      "id": "3ce865c2-088a-48e2-9e2b-d015468d174c",
      "name": "terminology_to_clarify"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Document Title:** {{ $('Set File ID').item.json.name }}\n**Document Text:** {{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<system_prompt>\nYOU ARE A \"STRUCTURAL OBSERVATIONS GENERATOR AGENT\", A DOCUMENT DESIGN REVIEWER TASKED WITH PROVIDING PROFESSIONAL ANALYSIS OF A DOCUMENT'S ORGANIZATIONAL STRUCTURE, FORMATTING, AND OVERALL READABILITY. YOU OPERATE LIKE A TECHNICAL EDITOR OR UX DOCUMENT AUDITOR.\n\nYOUR OBJECTIVE IS TO READ RAW TEXT EXTRACTED FROM A PDF DOCUMENT AND OUTPUT A LIST OF OBSERVATIONS ON THE STRUCTURAL QUALITY OF THE TEXT — INCLUDING FLOW, SECTIONING, clarity, consistency, and formatting.\n\n---\n\n### FUNCTIONAL MISSION:\n\nYOU MUST PERFORM THE FOLLOWING ACTIONS:\n\n1. ASSESS WHETHER THE DOCUMENT FOLLOWS A LOGICAL SEQUENCE (e.g., introduction → body → conclusion)  \n2. NOTE IF HEADINGS, SECTION LABELS, OR TRANSITIONS ARE PRESENT AND CONSISTENT  \n3. COMMENT ON CLARITY, LENGTH BALANCE BETWEEN SECTIONS, AND FORMATTING REGULARITY  \n4. IDENTIFY ANY STRUCTURAL ISSUES THAT MAY AFFECT COMPREHENSION OR PROFESSIONALISM  \n5. PRAISE EFFECTIVE ORGANIZATION WHERE APPROPRIATE — NOT JUST CRITIQUE\n\n---\n\n### OUTPUT FORMAT (MANDATORY):\n\nYOU MUST RETURN A JSON OBJECT IN THE FOLLOWING STRUCTURE:\n\n{\n  \"structural_observations\": [\n    \"Observation 1 about organization or flow\",\n    \"Observation 2 about formatting or readability\",\n    \"...\"\n  ]\n}\n\n- `structural_observations` MUST BE AN ARRAY of strings  \n- INCLUDE AT LEAST 2 OBSERVATIONS IF THE DOCUMENT HAS ANY STRUCTURE  \n- IF NO STRUCTURAL ISSUES OR STRENGTHS ARE APPARENT, RETURN A SINGLE NOTE SUCH AS: `\"No significant structural issues or formatting observations.\"`\n\n---\n\n### CHAIN OF THOUGHTS (REASONING SEQUENCE):\n\n<chain_of_thoughs_rules>\n// 1. UNDERSTAND: Read and absorb the overall structure of the document\n// 2. BASICS: Identify the presence of headers, logical flow, and formatting consistency\n// 3. BREAK DOWN: Assess whether transitions are smooth and sections are logically balanced\n// 4. ANALYZE: Flag layout issues, missing structural elements, or poor sectioning\n// 5. BUILD: Write clear, specific, and professional observations about the structure\n// 6. EDGE CASES: If the document lacks clear formatting (e.g., OCR-only), note that explicitly\n// 7. FINAL ANSWER: Output 1–5 observations in the required JSON structure\n</chain_of_thoughs_rules>\n\n---\n\n### WHAT NOT TO DO:\n\n- ❌ NEVER OUTPUT GENERAL OR VAGUE STATEMENTS LIKE \"IT’S OKAY\"  \n- ❌ NEVER OMIT THE `structural_observations` KEY  \n- ❌ NEVER OUTPUT RAW TEXT OR BULLET POINTS OUTSIDE JSON FORMAT  \n- ❌ NEVER FABRICATE ORGANIZATION IF THE DOCUMENT LACKS STRUCTURE  \n- ❌ NEVER BE OVERLY NEGATIVE — COMMENT ON STRENGTHS AND WEAKNESSES\n\n---\n\n### POSITIVE EXAMPLE:\n\n{\n  \"structural_observations\": [\n    \"The document follows a logical flow from introduction to conclusion, with clearly marked sections.\",\n    \"Headings are consistently formatted, but there is no separate methodology section, which may reduce transparency.\",\n    \"Some paragraphs are excessively long and could be broken up for better readability.\",\n    \"References are listed but not properly cited in the body of the text.\"\n  ]\n}\n\n---\n\n</system_prompt>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -20,
        2500
      ],
      "id": "b6602509-eed9-4cc3-85d2-13cfaaf9a01e",
      "name": "structural_observations"
    },
    {
      "parameters": {
        "folderId": "1tnFbWeL0qSrsspzpUjtz0W51RmYi-GQD",
        "title": "={{ $('File Created').item.json.name.replace(/\\.pdf$/i, '') }} PDF Summary"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        796,
        1300
      ],
      "id": "e39fd3da-5fb8-4eb5-9738-4608734f6612",
      "name": "Create a document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "xVA16Jyh2hg5MnIf",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "10fpnPZY65ecHpyYM6jzRW482UXLGc_8w",
          "mode": "list",
          "cachedResultName": "PDF Summaries",
          "cachedResultUrl": "https://drive.google.com/drive/folders/10fpnPZY65ecHpyYM6jzRW482UXLGc_8w"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1016,
        1300
      ],
      "id": "5c7bc66c-0795-4d02-8002-0bfce444b3cd",
      "name": "Move file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "T6X5BDZ1ikD7T9Mi",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $('Create a document').item.json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $json.name }}\n\n\n{{ $('main_theme').item.json.output.main_theme }}\n\n{{ $('document_summary').item.json.output.document_summary.map(section => `📌 ${section.section_title}:\\n${section.content}`).join('\\n\\n') }}\n\n\n---\n\n\nKey Takeaways\n\n{{ \n  $('key_takeaways').item.json.output.key_takeaways\n    .map(takeaway => `- ${takeaway.point}:\\n${takeaway.context}`)\n    .join('\\n\\n') \n}}\n\n\n---\n\n\nGaps & Limitations\n\n{{ \n  $('gaps_and_limitations').item.json.output.gaps_and_limitations\n    .map(gap => `- ${gap.issue}:\\n${gap.reason}`)\n    .join('\\n\\n') \n}}\n\n\n\n---\n\n\nFollow-Up Questions\n\n{{ \n  $('follow_up_questions').item.json.output.follow_up_questions\n    .map(question => `?? ${question}`)\n    .join('\\n\\n') \n}}\n\n\n---\n\n\nTerminology To Clarify\n\n{{ \n  $('terminology_to_clarify').item.json.output.terminology_to_clarify\n    .map(entry => `- ${entry.term}:\\n${entry.explanation}`)\n    .join('\\n\\n') \n}}\n\n\n---\n\n\nDocument Structural Observations\n\n{{ \n  $('structural_observations').item.json.output.structural_observations\n    .map(obs => `- ${obs}`)\n    .join('\\n\\n') \n}}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        1236,
        1300
      ],
      "id": "edba0e6c-79ca-4c4b-a392-7d2ab4260682",
      "name": "Update a document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "xVA16Jyh2hg5MnIf",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Download File From Drive').first().json.file_id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1KCeFtVVLJWS_37-sPCNvUvSpxlnRAHbW",
          "mode": "list",
          "cachedResultName": "Finished Processing PDF Files",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1KCeFtVVLJWS_37-sPCNvUvSpxlnRAHbW"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1456,
        2025
      ],
      "id": "8edb2def-4bbb-48f3-a1e9-3256d93abf2b",
      "name": "Move file1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "T6X5BDZ1ikD7T9Mi",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "main_theme",
            "type": "main",
            "index": 0
          },
          {
            "node": "document_summary",
            "type": "main",
            "index": 0
          },
          {
            "node": "key_takeaways",
            "type": "main",
            "index": 0
          },
          {
            "node": "gaps_and_limitations",
            "type": "main",
            "index": 0
          },
          {
            "node": "follow_up_questions",
            "type": "main",
            "index": 0
          },
          {
            "node": "terminology_to_clarify",
            "type": "main",
            "index": 0
          },
          {
            "node": "structural_observations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File From Drive": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "2nd Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2nd Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File From Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "main_theme",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "document_summary",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "structural_observations",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "terminology_to_clarify",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "follow_up_questions",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "gaps_and_limitations",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "key_takeaways",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "main_theme",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Create a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "document_summary",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "key_takeaways",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "gaps_and_limitations",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "follow_up_questions",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser5": {
      "ai_outputParser": [
        [
          {
            "node": "terminology_to_clarify",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser6": {
      "ai_outputParser": [
        [
          {
            "node": "structural_observations",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "document_summary": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "main_theme": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "key_takeaways": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "gaps_and_limitations": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "follow_up_questions": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "terminology_to_clarify": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 5
          }
        ]
      ]
    },
    "structural_observations": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 6
          }
        ]
      ]
    },
    "Create a document": {
      "main": [
        [
          {
            "node": "Move file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move file": {
      "main": [
        [
          {
            "node": "Update a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a document": {
      "main": [
        [
          {
            "node": "Move file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move file1": {
      "main": [
        [
          {
            "node": "2nd Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "98015f0c-2ac8-4de6-9248-9de4b0d35073",
  "meta": {
    "instanceId": "d067a0f7bd3d8d9cb7d57faa192b0e3929890b42ebc85f28edaf569907422edc"
  },
  "id": "Nqg5QL3DrP4hkP6Q",
  "tags": []
}